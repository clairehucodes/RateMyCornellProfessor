<<<<<<< HEAD
{"version":3,"sources":["webpack://ratemycornellprofessor/./src/content.ts","webpack://ratemycornellprofessor/webpack/startup"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["/**\n * Rate My Cornell Professors\n * JavaScript file to scrape information and replace it in Class Roster\n */\n\n//import { restricted } from './restricted';\n//import { subs } from './subs';\n\n//const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst proxyurl = \"http://www.datalakevision.com:8080/\";\nconst BASE_URL: string = proxyurl + 'https://www.ratemyprofessors.com';\nconst BASE_SEARCH_URL: string = 'https://www.ratemyprofessors.com/search.jsp?queryoption=HEADER&queryBy=teacherName&schoolName=Cornell+University&schoolID=298&query=';\nconst GREEN: string = '#1FB81C';\nconst YELLOW: string = '#FEEB00';\nconst RED: string = '#FC4433';\n// Use the same loading indicator that the page already does; don't host our own\nconst LOADING_INDICATOR: string = '<img src=\"https://i.pinimg.com/originals/a6/8f/b5/a68fb58aa1ace26b0008f5a5dbcebfd2.jpg\">';\n\n// @ts-ignore\nchrome.runtime.sendMessage({ action: 'showIcon' });\nlet area = document.getElementsByClassName('class-listing')[0]\n\n// Watch each of the areas where professor names may appear for changes. When detected, rate each professor.\nconst getOverallScoresObserver: MutationObserver = new MutationObserver(rateProfessorsOnPage);\n//$COURSE_LIST_AREAS.forEach(area => getOverallScoresObserver.observe(area, { childList: true }));\ngetOverallScoresObserver.observe(document.getElementsByClassName('class-listing').item(0), { childList: true, attributes: true});\n\n//rateProfessorsOnPage;\n/**\n * Rates each of the professors currently in view.\n */\nsetTimeout(rateProfessorsOnPage, 250);\n\nfunction rateProfessorsOnPage() {\n  const professorArray: Array<string> = getProfessorStrings()\n\n  for (let i: number = 0; i < professorArray.length; i++) {\n    let myHTMLColl: HTMLCollection = document.getElementsByClassName('instructors').item(i).getElementsByClassName('tooltip-iws');\n    for (let j: number = 0; j < myHTMLColl.length; j++) {\n      let myNode: Element = document.getElementsByClassName('instructors').item(i).getElementsByClassName('tooltip-iws').item(j);\n      let myName: string = professorArray[i+j]\n      // @ts-ignore\n      myDriver(myName, myNode);\n\n\n    }\n  }\n\n}\n\nasync function myDriver(myName: string, myNode: HTMLElement) {\n    try {\n      if (isValidProfessor(myName) && isUnratedProfessor(myName)) {\n        setIsLoading(myNode);\n        const score = await getProfessorId(myName).then(getOverallScore);\n        setScore(myName, myNode, score);\n      } else if (isUnratedProfessor(myName)) {\n        setInvalidScore(myName, myNode);\n      }\n\n    } catch {\n      setInvalidScore(myName, myNode);\n    };\n  }\n\n\n/**\n * Returns an array of strings of each search result's professor field\n */\nfunction getProfessorStrings(): Array<string> {\n  let returnStrings: Array<string> = []\n  for (let i: number = 0; i < document.getElementsByClassName('instructors').length; i++) {\n    let returnValHTML: any = document.getElementsByClassName('instructors').item(i).getElementsByClassName('tooltip-iws').item(0);\n    let returnVal: string;\n    if (returnValHTML == null) {\n      returnVal = \"Staff\"\n    }\n    else{\n      let numProfs = document.getElementsByClassName('instructors').item(i).querySelectorAll('p').length\n      for (let j: number = 0; j < numProfs; j++) {\n        returnVal = document.getElementsByClassName('instructors').item(i).getElementsByClassName('tooltip-iws').item(j).getAttribute('data-content');\n      }\n\n    }\n    \n    returnVal = returnVal.substring(0, returnVal.indexOf(\" (\"))\n    console.log(returnVal)\n    returnStrings[i] = returnVal\n    \n    //let returnVal: HTMLElement = document.getElementsByClassName('instructors').item(i).querySelector('tooltip-iws')\n  }\n  return returnStrings;\n}\n\n/**\n * Gets the part of the URL that needs to be appended to the base URL to reach the professor's page\n * Example return: '/ShowRatings.jsp?tid=2301025'\n */\nfunction getProfessorId(profName: string): Promise<string> {\n\n  const config = {\n    action: 'searchForProfessor',\n    method: 'POST',\n    url: BASE_SEARCH_URL + convertName(profName)\n  };\n\n  return new Promise((resolve, reject) => {\n\n    // @ts-ignore\n    chrome.runtime.sendMessage(config, res => {\n      if (res.profId) {\n        resolve(res.profId);\n      } else {\n        reject('Search result not found');\n      }\n    });\n  });\n}\n\n/**\n * Scrapes the RMP page for the professor at <profId> for their overall score and returns it\n */\nfunction getOverallScore(profId: string): Promise<number> {\n\n  const config = {\n    action: 'getOverallScore',\n    method: 'POST',\n    url: BASE_URL + profId,\n  };\n\n  return new Promise((resolve, reject) => {\n    // @ts-ignore\n    chrome.runtime.sendMessage(config, res => {\n      if (res) {\n        if (res.profRating) {\n          if (res.profRating === '0.0' || res.profRating.includes('Grade received')) {\n            reject('Professor not rated');\n          } else {\n            resolve(parseFloat(res.profRating));\n          }\n        } else {\n          reject('No rating found');\n        }\n      }\n      else{\n        reject('No rating found');\n      }\n    });\n  });\n}\n\n/**\n * Converts a name from it's notation as shown in the search results to a form\n * that can be appended to the base RateMyProfessors URL in order to emulate\n * a search.\n */\nfunction convertName(original: string): string {\n  let nameArr = original.split(\" \");\n  let nameURL = nameArr[0] + \"+\"+ nameArr[1]\n\n  return nameURL\n//   const regex = /\\w+( )\\w+/g;\n//   const temp: RegExpExecArray = regex.exec(original)!;\n// //   if (temp[0].trim() in subs) {\n// //     temp[0] = subs[temp[0].trim()];\n// //   }\n// return encodeURIComponent(original);\n}\n\n/**\n * Returns a color based on <rating>. These numbers match the values on RateMyProfessors.com\n */\nfunction getColor(rating: number): string {\n  if (rating >= 3.5) {\n    return GREEN;\n  }\n  if (rating < 2.5) {\n    return RED;\n  }\n  return YELLOW;\n}\n\n/**\n * Given an array of elements, groups them by professor name and returns an object\n * where the key represents the professor name and the value is an array of the nodes\n * that correspond to that professor.\n *\n * Slight modification of https://stackoverflow.com/questions/14446511/what-is-the-most-efficient-method-to-groupby-on-a-javascript-array-of-objects\n */\nfunction groupProfessors(vals: NodeListOf<Element>): { [key: string]: HTMLElement[] } {\n  return Array.from(vals).reduce((ret, val) => {\n    (ret[val.textContent.trim()] = ret[val.textContent.trim()] || []).push(val);\n    return ret;\n  }, {});\n}\n\n/**\n * Returns TRUE if the professor is a single, non-Staff professor. Staff professors and\n * courses with multiple professors return FALSE.\n */\nfunction isValidProfessor(name: string): boolean {\n  return (name !== '' && !name.includes('Staff'));\n}\n\n/**\n * Return TRUE if the professor is not already rated or is in the process of being rated.\n * FALSE otherwise.\n */\nfunction isUnratedProfessor(name: string): boolean {\n  return !name.includes(' - ');\n}\n\n/**\n * Adds 'N/A' as the score to professor on the search page\n */\nfunction setInvalidScore(name: string, node: HTMLElement) {\n  setScore(name, node);\n}\n\n/**\n * Appends the loading indicator next to professor names in the results list\n */\nfunction setIsLoading(name: HTMLElement) {\n  name.innerHTML = name.innerHTML + ' - ' + LOADING_INDICATOR;\n  //name = name + ' - ' + LOADING_INDICATOR;\n}\n\n/**\n * Adds the score and changes the color of the professor on the search page\n */\nfunction setScore(name: string, node: HTMLElement, score?: number) {\n  if (score) {\n    node.textContent = name + ' - ' + score.toFixed(1);\n    node.style.color = getColor(score);\n  } else if (node == null) {\n    //do nothing\n  } \n  else {\n    node.innerHTML = name + ' - N/A';\n  }\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_modules__[\"./src/content.ts\"]();\n"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack://ratemycornellprofessor/./src/content.ts","webpack://ratemycornellprofessor/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;GAGG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,4CAA4C;AAC5C,gCAAgC;AAEhC,0DAA0D;AAC1D,IAAM,QAAQ,GAAG,qCAAqC,CAAC;AACvD,IAAM,QAAQ,GAAW,QAAQ,GAAG,kCAAkC,CAAC;AACvE,IAAM,eAAe,GAAW,sIAAsI,CAAC;AACvK,IAAM,KAAK,GAAW,SAAS,CAAC;AAChC,IAAM,MAAM,GAAW,SAAS,CAAC;AACjC,IAAM,GAAG,GAAW,SAAS,CAAC;AAC9B,gFAAgF;AAChF,IAAM,iBAAiB,GAAW,0FAA0F,CAAC;AAC7H,4CAA4C;AAC5C,IAAI,KAAK,GAAG,IAAI,GAAG,EAAE;AAErB,aAAa;AACb,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;AACnD,IAAI,IAAI,GAAG,QAAQ,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAE9D,4GAA4G;AAC5G,IAAM,wBAAwB,GAAqB,IAAI,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;AAC9F,kGAAkG;AAClG,wBAAwB,CAAC,OAAO,CAAC,QAAQ,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;AAEjI,uBAAuB;AACvB;;GAEG;AACH,UAAU,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;AAEtC,SAAS,oBAAoB;IAC3B,IAAM,cAAc,GAAkB,mBAAmB,EAAE;IAE3D,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtD,IAAI,MAAM,GAAY,QAAQ,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3H,IAAI,MAAM,GAAW,cAAc,CAAC,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;QAClB,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;YAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;SACtB;QACD,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;YACpB,aAAa;YACb,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;SAC7C;aACI;YACH,aAAa;YACb,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SAE1B;KACF;AAEH,CAAC;AAED,SAAe,QAAQ,CAAC,MAAc,EAAE,MAAmB;;;;;;;yBAEjD,iBAAgB,CAAC,MAAM,CAAC,IAAI,kBAAkB,CAAC,MAAM,CAAC,GAAtD,wBAAsD;oBACxD,YAAY,CAAC,MAAM,CAAC,CAAC;oBACP,qBAAM,cAAc,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;;oBAA1D,KAAK,GAAG,SAAkD;oBAChE,aAAa;oBACb,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;oBACxB,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;oBAChC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,MAAM,CAAC;;;oBAElC,IAAI,kBAAkB,CAAC,MAAM,CAAC,EAAE;wBACrC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;qBACjC;;;;;oBAGD,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;;;oBACjC,CAAC;;;;;CACH;AAGH;;GAEG;AACH,SAAS,mBAAmB;IAC1B,IAAI,aAAa,GAAkB,EAAE;IACrC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtF,IAAI,aAAa,GAAQ,QAAQ,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9H,IAAI,SAAS,SAAQ,CAAC;QACtB,IAAI,aAAa,IAAI,IAAI,EAAE;YACzB,SAAS,GAAG,OAAO;SACpB;aACG;YACF,mGAAmG;YACnG,SAAS,GAAG,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;SAExD;QAED,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,aAAa,CAAC,CAAC,CAAC,GAAG,SAAS;QAE5B,kHAAkH;KACnH;IACD,OAAO,aAAa,CAAC;AACvB,CAAC;AAED;;;GAGG;AACH,SAAS,cAAc,CAAC,QAAgB;IAEtC,IAAM,MAAM,GAAG;QACb,MAAM,EAAE,oBAAoB;QAC5B,MAAM,EAAE,MAAM;QACd,GAAG,EAAE,eAAe,GAAG,WAAW,CAAC,QAAQ,CAAC;KAC7C,CAAC;IAEF,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAEjC,aAAa;QACb,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,aAAG;YACpC,IAAI,GAAG,CAAC,MAAM,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACrB;iBAAM;gBACL,MAAM,CAAC,yBAAyB,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;GAEG;AACH,SAAS,eAAe,CAAC,MAAc;IAErC,IAAM,MAAM,GAAG;QACb,MAAM,EAAE,iBAAiB;QACzB,MAAM,EAAE,MAAM;QACd,GAAG,EAAE,QAAQ,GAAG,MAAM;KACvB,CAAC;IACF,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,aAAa;QACb,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,aAAG;YACpC,IAAI,GAAG,EAAE;gBACP,IAAI,GAAG,CAAC,UAAU,EAAE;oBAClB,IAAI,GAAG,CAAC,UAAU,KAAK,KAAK,IAAI,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;wBACzE,MAAM,CAAC,qBAAqB,CAAC,CAAC;qBAC/B;yBAAM;wBACL,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;qBAErC;iBACF;qBAAM;oBACL,MAAM,CAAC,iBAAiB,CAAC,CAAC;iBAC3B;aACF;iBACG;gBACF,MAAM,CAAC,iBAAiB,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;;;GAIG;AACH,SAAS,WAAW,CAAC,QAAgB;IACnC,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAE,OAAO,CAAC,CAAC,CAAC;IAE1C,OAAO,OAAO;IAChB,gCAAgC;IAChC,yDAAyD;IACzD,qCAAqC;IACrC,yCAAyC;IACzC,SAAS;IACT,uCAAuC;AACvC,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ,CAAC,MAAc;IAC9B,IAAI,MAAM,IAAI,GAAG,EAAE;QACjB,OAAO,KAAK,CAAC;KACd;IACD,IAAI,MAAM,GAAG,GAAG,EAAE;QAChB,OAAO,GAAG,CAAC;KACZ;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;;;GAMG;AACH,SAAS,eAAe,CAAC,IAAyB;IAChD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;QACtC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5E,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAED;;;GAGG;AACH,SAAS,gBAAgB,CAAC,IAAY;IACpC,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AAClD,CAAC;AAED;;;GAGG;AACH,SAAS,kBAAkB,CAAC,IAAY;IACtC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC;AAED;;GAEG;AACH,SAAS,eAAe,CAAC,IAAY,EAAE,IAAiB;IACtD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACvB,CAAC;AAED;;GAEG;AACH,SAAS,YAAY,CAAC,IAAiB;IACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,iBAAiB,CAAC;IAC5D,0CAA0C;AAC5C,CAAC;AAED;;GAEG;AACH,SAAS,QAAQ,CAAC,IAAY,EAAE,IAAiB,EAAE,KAAc;IAC/D,IAAI,KAAK,EAAE;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;KACpC;SAAM;QACL,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,QAAQ,CAAC;KAClC;AACH,CAAC;;;;;;;UC1PD;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["/**\n * Rate My Cornell Professors\n * JavaScript file to scrape information and replace it in Class Roster\n */\n\n//import { restricted } from './restricted';\n//import { subs } from './subs';\n\n//const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst proxyurl = \"http://www.datalakevision.com:8080/\";\nconst BASE_URL: string = proxyurl + 'https://www.ratemyprofessors.com';\nconst BASE_SEARCH_URL: string = 'https://www.ratemyprofessors.com/search.jsp?queryoption=HEADER&queryBy=teacherName&schoolName=Cornell+University&schoolID=298&query=';\nconst GREEN: string = '#1FB81C';\nconst YELLOW: string = '#FEEB00';\nconst RED: string = '#FC4433';\n// Use the same loading indicator that the page already does; don't host our own\nconst LOADING_INDICATOR: string = '<img src=\"https://i.pinimg.com/originals/a6/8f/b5/a68fb58aa1ace26b0008f5a5dbcebfd2.jpg\">';\n//define map that holds prof name and scores\nlet myMap = new Map()\n\n// @ts-ignore\nchrome.runtime.sendMessage({ action: 'showIcon' });\nlet area = document.getElementsByClassName('class-listing')[0]\n\n// Watch each of the areas where professor names may appear for changes. When detected, rate each professor.\nconst getOverallScoresObserver: MutationObserver = new MutationObserver(rateProfessorsOnPage);\n//$COURSE_LIST_AREAS.forEach(area => getOverallScoresObserver.observe(area, { childList: true }));\ngetOverallScoresObserver.observe(document.getElementsByClassName('class-listing').item(0), { childList: true, attributes: true});\n\n//rateProfessorsOnPage;\n/**\n * Rates each of the professors currently in view.\n */\nsetTimeout(rateProfessorsOnPage, 500);\n\nfunction rateProfessorsOnPage() {\n  const professorArray: Array<string> = getProfessorStrings()\n\n  for (let i: number = 0; i < professorArray.length; i++) {\n    let myNode: Element = document.getElementsByClassName('instructors').item(i).getElementsByClassName('tooltip-iws').item(0);\n    let myName: string = professorArray[i]\n    console.log('*' + myName + '*')\n    console.log(myMap);\n    console.log((myMap.get(myName)));\n    myMap.set(\"hi\", 5)\n    if (myMap.has(\"hi\")){\n      console.log(\"WORKED\")\n    }\n    if (myMap.has(myName)){\n      // @ts-ignore\n      setScore(myName, myNode, myMap.get(myName));\n    } \n    else {\n      // @ts-ignore\n      myDriver(myName, myNode);\n\n    }\n  }\n\n}\n\nasync function myDriver(myName: string, myNode: HTMLElement) {\n    try {\n      if (isValidProfessor(myName) && isUnratedProfessor(myName)) {\n        setIsLoading(myNode);\n        const score = await getProfessorId(myName).then(getOverallScore);\n        // @ts-ignore\n        myMap.set(myName, score)\n        setScore(myName, myNode, score);\n        console.log('setting score: ' + myName)\n\n      } else if (isUnratedProfessor(myName)) {\n        setInvalidScore(myName, myNode);\n      }\n\n    } catch {\n      setInvalidScore(myName, myNode);\n    };\n  }\n\n\n/**\n * Returns an array of strings of each search result's professor field\n */\nfunction getProfessorStrings(): Array<string> {\n  let returnStrings: Array<string> = []\n  for (let i: number = 0; i < document.getElementsByClassName('instructors').length; i++) {\n    let returnValHTML: any = document.getElementsByClassName('instructors').item(i).getElementsByClassName('tooltip-iws').item(0);\n    let returnVal: string;\n    if (returnValHTML == null) {\n      returnVal = \"Staff\"\n    }\n    else{\n      //returnValHTML.item(i).getElementsByClassName('tooltip-iws').item(0).getAttribute('data-content');\n      returnVal = returnValHTML.getAttribute('data-content');\n\n    }\n    \n    returnVal = returnVal.substring(0, returnVal.indexOf(\" (\"))\n    console.log(returnVal)\n    returnStrings[i] = returnVal\n    \n    //let returnVal: HTMLElement = document.getElementsByClassName('instructors').item(i).querySelector('tooltip-iws')\n  }\n  return returnStrings;\n}\n\n/**\n * Gets the part of the URL that needs to be appended to the base URL to reach the professor's page\n * Example return: '/ShowRatings.jsp?tid=2301025'\n */\nfunction getProfessorId(profName: string): Promise<string> {\n\n  const config = {\n    action: 'searchForProfessor',\n    method: 'POST',\n    url: BASE_SEARCH_URL + convertName(profName)\n  };\n\n  return new Promise((resolve, reject) => {\n\n    // @ts-ignore\n    chrome.runtime.sendMessage(config, res => {\n      if (res.profId) {\n        resolve(res.profId);\n      } else {\n        reject('Search result not found');\n      }\n    });\n  });\n}\n\n/**\n * Scrapes the RMP page for the professor at <profId> for their overall score and returns it\n */\nfunction getOverallScore(profId: string): Promise<number> {\n\n  const config = {\n    action: 'getOverallScore',\n    method: 'POST',\n    url: BASE_URL + profId,\n  };\n  return new Promise((resolve, reject) => {\n    // @ts-ignore\n    chrome.runtime.sendMessage(config, res => {\n      if (res) {\n        if (res.profRating) {\n          if (res.profRating === '0.0' || res.profRating.includes('Grade received')) {\n            reject('Professor not rated');\n          } else {\n            resolve(parseFloat(res.profRating));\n\n          }\n        } else {\n          reject('No rating found');\n        }\n      }\n      else{\n        reject('No rating found');\n      }\n    });\n  });\n}\n\n/**\n * Converts a name from it's notation as shown in the search results to a form\n * that can be appended to the base RateMyProfessors URL in order to emulate\n * a search.\n */\nfunction convertName(original: string): string {\n  let nameArr = original.split(\" \");\n  let nameURL = nameArr[0] + \"+\"+ nameArr[1]\n\n  return nameURL\n//   const regex = /\\w+( )\\w+/g;\n//   const temp: RegExpExecArray = regex.exec(original)!;\n// //   if (temp[0].trim() in subs) {\n// //     temp[0] = subs[temp[0].trim()];\n// //   }\n// return encodeURIComponent(original);\n}\n\n/**\n * Returns a color based on <rating>. These numbers match the values on RateMyProfessors.com\n */\nfunction getColor(rating: number): string {\n  if (rating >= 3.5) {\n    return GREEN;\n  }\n  if (rating < 2.5) {\n    return RED;\n  }\n  return YELLOW;\n}\n\n/**\n * Given an array of elements, groups them by professor name and returns an object\n * where the key represents the professor name and the value is an array of the nodes\n * that correspond to that professor.\n *\n * Slight modification of https://stackoverflow.com/questions/14446511/what-is-the-most-efficient-method-to-groupby-on-a-javascript-array-of-objects\n */\nfunction groupProfessors(vals: NodeListOf<Element>): { [key: string]: HTMLElement[] } {\n  return Array.from(vals).reduce((ret, val) => {\n    (ret[val.textContent.trim()] = ret[val.textContent.trim()] || []).push(val);\n    return ret;\n  }, {});\n}\n\n/**\n * Returns TRUE if the professor is a single, non-Staff professor. Staff professors and\n * courses with multiple professors return FALSE.\n */\nfunction isValidProfessor(name: string): boolean {\n  return (name !== '' && !name.includes('Staff'));\n}\n\n/**\n * Return TRUE if the professor is not already rated or is in the process of being rated.\n * FALSE otherwise.\n */\nfunction isUnratedProfessor(name: string): boolean {\n  return !name.includes(' - ');\n}\n\n/**\n * Adds 'N/A' as the score to professor on the search page\n */\nfunction setInvalidScore(name: string, node: HTMLElement) {\n  setScore(name, node);\n}\n\n/**\n * Appends the loading indicator next to professor names in the results list\n */\nfunction setIsLoading(name: HTMLElement) {\n  name.innerHTML = name.innerHTML + ' - ' + LOADING_INDICATOR;\n  //name = name + ' - ' + LOADING_INDICATOR;\n}\n\n/**\n * Adds the score and changes the color of the professor on the search page\n */\nfunction setScore(name: string, node: HTMLElement, score?: number) {\n  if (score) {\n    node.textContent = name + ' - ' + score.toFixed(1);\n    node.style.color = getColor(score);\n  } else {\n    node.innerHTML = name + ' - N/A';\n  }\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_modules__[\"./src/content.ts\"]();\n"],"sourceRoot":""}
>>>>>>> 131350978ce48eb8f1961c45d4c06578970aeac6
