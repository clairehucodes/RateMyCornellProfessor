/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!***************************!*\
  !*** ./src/background.ts ***!
  \***************************/
eval("\n// @ts-ignore\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n    var method = request.method ? request.method.toUpperCase() : 'GET';\n    var headers = new Headers();\n    if (method === 'POST')\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    var config = {\n        method: method,\n        headers: headers,\n        mode: 'cors',\n        cache: 'default',\n    };\n    switch (request.action) {\n        case 'showIcon':\n            // @ts-ignore\n            chrome.pageAction.show(sender.tab.id);\n            return true;\n        case 'searchForProfessor':\n            fetch(request.url, config)\n                .then(function (res) { return res.text(); })\n                .then(function (pageText) {\n                var searchPage = document.createElement('html');\n                searchPage.innerHTML = pageText;\n                // const profId: HTMLElement = searchPage.querySelector('.listing.PROFESSOR');\n                var profId = searchPage.querySelector('.listing.PROFESSOR');\n                var ret = (profId) ?\n                    profId.getElementsByTagName('a')[0].getAttribute('href') :\n                    profId;\n                console.debug(ret);\n                sendResponse({ profId: ret });\n            })\n                .catch(function (err) {\n                console.debug('[ERROR: searchForProfessor]');\n                console.debug(err);\n                sendResponse();\n                return false;\n            });\n            return true;\n        case 'getOverallScore':\n            fetch(request.url, config)\n                .then(function (res) { return res.text(); })\n                .then(function (pageText) {\n                var ratingPage = document.createElement('html');\n                ratingPage.innerHTML = pageText;\n                var profRatingEle = ratingPage.querySelector('div.grade');\n                var profRating;\n                if (profRatingEle != null) {\n                    profRating = profRatingEle.textContent;\n                    sendResponse({ profRating: profRating });\n                }\n                else {\n                    console.debug('[ERROR: ratingPage.querySelector(div.grade) is null]');\n                    sendResponse();\n                }\n            })\n                .catch(function (err) {\n                console.debug('[ERROR: getOverallScore]');\n                console.debug(err);\n                sendResponse();\n                return false;\n            });\n            return true;\n        default:\n            console.debug(\"Action \" + request.action + \" not recognized\");\n            break;\n    }\n});\n\n\n//# sourceURL=webpack://ratemycornellprofessor/./src/background.ts?");
/******/ })()
;